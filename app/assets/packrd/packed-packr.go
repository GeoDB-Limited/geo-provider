// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "678653aa69aa2cbff4ca97bc9ed26d39"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"d21298076a314c91978b759cc3971a2e": "1f8b08000000000000ff9493414bc3401085effb2be6d8a2fd053d097a1011a4e0a12799ee0c7160b31b7626d59f2fb136c9a26bda9c76795fde8337b39b0ddcb4d2643486d7cef9ccc3c9f01018888fe259ddca01000841f11da451ce82e1f65b46a2ccaaa36cfc69a7534c06b10f3f5cdf9746d3bde492967135bf3611870bb8903c065ee6b0ebf492dc2367951417b98693477d7f3bf335cea4e5792e0d73a8706ad876e7dcf15e72d3fffffbbdec1e9fef767b787ad8c34a68edd65b57aec1d09c498abf17a1ba02d521a089f5c400c45e5a0c7f8c293627a4466058f298aa5c2e71b9beab8a9b3fa7fbf4111de5d495cf093caa47e2ed5c1b3b9ed4af000000ffff51f3ac9f9a030000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "d21298076a314c91978b759cc3971a2e"})
	}()
	return nil
}()
