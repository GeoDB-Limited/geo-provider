// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "678653aa69aa2cbff4ca97bc9ed26d39"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"d21298076a314c91978b759cc3971a2e": "1f8b08000000000000ff9493cf4a03311087ef798a39b6689fa027410f2282143cf4246366a881fc3333a93ebeaceb7677a96bea9c12f26506be1fb3d9c055708782caf09c8d2ddc9d145f3d03f1d15916b3320000485458048652fed4fe149342acde438deebdf2f5375eab2398d4781ff09e4b02b33a6fdb732111fb0b389f2c7a6e7398b35c32f7c8455c8a4deec0c9a2bcbd0cfc12a72ef0742e75be1738510c79987bbacfb9f1ffdffd9e76f78f37bb3d3cdced61f593e5daacb7669e79a74f5d8ae7a937f2f6a84e2b3100b17501fd2fc9c4438f2c11e85b3d467b6d6f6d63ff77355d97dbf4110d9594e7eb0216c522f176fa76d23abe7e050000ffff4275e8977a030000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "d21298076a314c91978b759cc3971a2e"})
	}()
	return nil
}()
