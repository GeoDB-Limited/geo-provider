// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "a7836babf0eab10f3470ee1ad3bc30b6"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"d79ca70d8257e86cb4b5feee0e03cc12": "1f8b08000000000000ff9cd2c14a03311006e0fb3cc51c77d15ec4db9ee21a50b0206b3c97b419978174523653ece34b75e37ad8b5d09c92fc7c4cf8c96a85377bee07af84ef0780b6b3c65974e6e1c5624c3baf9c246305b8b07c0803e57cdeb64fa633adb35d757f57a3244539c6783b4ba357d663a0f1b8e59e452f986f97a4bf0afa78dd40e53da17b5edb3767d6af503700bb81ce75b1043a4d1d6dc626363ff749a6a81aa3ba59b2a58e395cb27f742965969770d9976e669f1e7fa7c3dfcff2983e05200ce980eab791903f904e9c354fb8f90a0000ffff507c69005e020000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "d79ca70d8257e86cb4b5feee0e03cc12"})
		}()

	return nil
}()
