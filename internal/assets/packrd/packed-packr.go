// +build !skippackr
// Code generated by github.com/gobuffalo/packr/v2. DO NOT EDIT.

// You can use the "packr2 clean" command to clean up this,
// and any other packr generated files.
package packrd

import (
	"github.com/gobuffalo/packr/v2"
	"github.com/gobuffalo/packr/v2/file/resolver"
)

var _ = func() error {
	const gk = "678653aa69aa2cbff4ca97bc9ed26d39"
	g := packr.New(gk, "")
	hgr, err := resolver.NewHexGzip(map[string]string{
		"d21298076a314c91978b759cc3971a2e": "1f8b08000000000000ff8c93c16ac3300c86ef7e0a1d5bb63e414f83ed30c6601476e869a896c8048e1d2ca5dbe38fac6b12b3ba694e36ff97dfe297b4d9c05d2b4d466378ef9ccf3c9c0c0f8181f8289ed5ad1c00801014df411ae52c18ee7f6524caac3acac6df763ac56410fbf0c7f57d6934dd4b2e69f95ccdaf4dc4e1062e248f819739ec3abde5dd2367951417399396e77e34e45be1d4b0edce7ee3bde4a6ffaffb359c3ceae7c7b9ce5a7d6fbbe7d787dd1e5e9ef6b0125abbf5d6956330246792e2ff41a88e40b50968623d3100b19716c38536c5e684d4080c4b1e53e4cb612fc75cf3b818dc7c9d1ed35774945357ae1378548fc4dbb936663ca93f010000ffffbabca5099a030000",
	})
	if err != nil {
		panic(err)
	}
	g.DefaultResolver = hgr

	func() {
		b := packr.New("migrations", "./migrations")
		b.SetResolver("001_initial.sql", packr.Pointer{ForwardBox: gk, ForwardPath: "d21298076a314c91978b759cc3971a2e"})
	}()
	return nil
}()
